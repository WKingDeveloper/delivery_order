plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.epages.restdocs-api-spec' version '0.16.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.epages:restdocs-api-spec-restassured:0.16.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

openapi3 {
    server = 'http://localhost:8080/'
    title = '주문 API 문서'
    description = '회원가입, 로그인, 주문 조회, 주문 주소 수정'
    version = '1.0'
    format = 'yaml'
}

task copyOasToDocs {
//    dependsOn("openapi3") // openapi3 task가 먼저 실행되도록 설정
//    delete("src/main/resources/static/docs/openapi3.yaml") // 기존 yaml 파일 삭제
    copy {
        from("$buildDir/api-spec/openapi3.yaml") // 복제할 yaml 파일 타겟팅
        into("src/main/resources/static/docs/.") // 타겟 디렉토리로 파일 복제
    }
}
